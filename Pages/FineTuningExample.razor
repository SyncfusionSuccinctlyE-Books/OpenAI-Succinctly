@page "/finetuningexample"
@using OpenAI;
@using OpenAI.Files;
@using OpenAI.Models;
@inject IConfiguration _configuration
<PageTitle>Fine Tuning Example</PageTitle>

<h1>Fine Tuning Example</h1>

<br />
<h4> Files</h4>
<ul>
    @foreach (var file in ColFileData)
    {
        <li>
            @file.Id + " : " + @file.FileName + " | " + @file.Size + " bytes"
        </li>
    }
</ul>
<h4>Upload</h4>
<button class="btn btn-primary" @onclick="UploadFile">Upload File</button>
<p>
    Last File uploaded:
    @if(fileData != null)
    {
    @fileData.FileName 
    }
</p>

@code {
    string Organization = "";
    string ApiKey = "";
    List<FileData> ColFileData = new List<FileData>();
    FileData? fileData;

    protected override async Task OnInitializedAsync()
    {
        Organization = _configuration["OpenAIServiceOptions:Organization"] ?? "";
        ApiKey = _configuration["OpenAIServiceOptions:ApiKey"] ?? "";

        await ListFiles();
    }

    private async Task ListFiles()
    {
        var api = new OpenAIClient(new OpenAIAuthentication(ApiKey, Organization));
        var files = await api.FilesEndpoint.ListFilesAsync();
        ColFileData = files.ToList();
    }

    private async Task UploadFile()
    {
        var api = new OpenAIClient(new OpenAIAuthentication(ApiKey, Organization));
        fileData = await api.FilesEndpoint.UploadFileAsync(@"data/SentimentSample.jsonl", "fine-tune");
    }
}