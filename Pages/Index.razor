@page "/"
@using OpenAI;
@using OpenAI.Models;
@inject IConfiguration _configuration
<PageTitle>Index</PageTitle>

<h1>Finish the Sentence</h1>
<input class="form-control" type="text"
       @bind="prompt" />
<br />
<button class="btn btn-primary"
        @onclick="CallService">
    Call The Service
</button>
<br />
<br />
<h4>Response:</h4>
<br />
<p>@response</p>
@code {
    string Organization = "";
    string ApiKey = "";
    string prompt = "Once upon a time";
    string response = "";
    protected override void OnInitialized()
    {
        Organization = _configuration["OpenAIServiceOptions:Organization"] ?? "";
        ApiKey = _configuration["OpenAIServiceOptions:ApiKey"] ?? "";
    }

    async Task CallService()
    {
        var api = new OpenAIClient(new OpenAIAuthentication(ApiKey, Organization));

        var result = await api.CompletionsEndpoint.CreateCompletionAsync(prompt, maxTokens: 100, temperature: 0.1, model: Model.Davinci);

        foreach (var completion in result.Completions)
        {
            response += completion.Text;
        }
    }
}